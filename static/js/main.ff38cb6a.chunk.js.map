{"version":3,"sources":["components/CurrencyInput.js","components/CurrencyConverter.js","App.js","reportWebVitals.js","index.js"],"names":["CurrencyInput","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","value","onChange","map","option","CurrencyConverter","fromAmount","toAmount","BASE_CURRENCY_URL","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","plnCurrency","Object","keys","rates","base","catch","error","console","log","e","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAAe,SAASA,EAAcC,GACpC,IACEC,EAKED,EALFC,gBACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,iBACAC,EAEEJ,EAFFI,eACAC,EACEL,EADFK,OAGF,OACE,gCACE,uBAAOC,KAAK,SAASC,MAAOF,EAAQG,SAAUJ,IAC9C,wBAAQG,MAAOL,EAAkBM,SAAUL,EAA3C,SACGF,EAAgBQ,KAAI,SAACC,GAAD,OACnB,wBAAqBH,MAAOG,EAA5B,SACGA,GADUA,WCXR,SAASC,EAAkBX,GACxC,IASIY,EAAYC,EATVC,EAAoBd,EAAMc,kBAEhC,EAA8CC,mBAAS,IAAvD,mBAAOd,EAAP,KAAwBe,EAAxB,KACA,EAAwCD,qBAAxC,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAoCH,qBAApC,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAwCL,qBAAxC,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAA4BP,mBAAS,GAArC,mBAAOV,EAAP,KAAekB,EAAf,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KAIID,GACFZ,EAAaP,EACbQ,EAAWR,EAASgB,IAEpBR,EAAWR,EACXO,EAAaP,EAASgB,GAGxBK,qBAAU,WACRC,MAAMb,GACHc,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAAcC,OAAOC,KAAKH,EAAKI,OAAO,KAC5CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBc,GAChBZ,EAAcW,EAAKK,MACnBd,EAAgBS,EAAKI,MAAMH,OAE5BK,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IAEHZ,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,8CAAD,OAC2CV,EAD3C,YAC2DE,EAD3D,+CAGFS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUT,EAAgBS,EAAK,GAAD,OAAId,EAAJ,YAAoBE,QACvDkB,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAEjC,CAACrB,EAAcE,IAYlB,OACE,qCACE,oDACA,cAACpB,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBe,EAClBd,iBAAkB,SAACsC,GAAD,OAAOvB,EAAgBuB,EAAEC,OAAOnC,QAClDH,eAjByB,SAACqC,GAC9BlB,EAAUkB,EAAEC,OAAOnC,OACnBkB,GAAwB,IAgBpBpB,OAAQO,IAPZ,IAUE,cAACb,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,iBAAkB,SAACsC,GAAD,OAAOrB,EAAcqB,EAAEC,OAAOnC,QAChDH,eApBuB,SAACqC,GAC5BlB,EAAUkB,EAAEC,OAAOnC,OACnBkB,GAAwB,IAmBpBpB,OAAQQ,OCtEhB,IAEMC,EAAiB,8DAFA,oCAQR6B,MAJf,WACE,OAAO,cAAChC,EAAD,CAAmBG,kBAAmBA,KCIhC8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ff38cb6a.chunk.js","sourcesContent":["export default function CurrencyInput(props) {\r\n  const {\r\n    currencyOptions,\r\n    selectedCurrency,\r\n    onChangeCurrency,\r\n    onChangeAmount,\r\n    amount,\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"number\" value={amount} onChange={onChangeAmount} />\r\n      <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n        {currencyOptions.map((option) => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n            {/* {console.log(option)} */}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport CurrencyInput from './CurrencyInput';\r\n\r\nexport default function CurrencyConverter(props) {\r\n  const BASE_CURRENCY_URL = props.BASE_CURRENCY_URL;\r\n\r\n  const [currencyOptions, setCurrencyOptions] = useState([]);\r\n  const [fromCurrency, setFromCurrency] = useState();\r\n  const [toCurrency, setToCurrency] = useState();\r\n  const [exchangeRate, setExchangeRate] = useState();\r\n  const [amount, setAmount] = useState(1);\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\r\n\r\n  let fromAmount, toAmount;\r\n\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = amount * exchangeRate;\r\n  } else {\r\n    toAmount = amount;\r\n    fromAmount = amount / exchangeRate;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(BASE_CURRENCY_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const plnCurrency = Object.keys(data.rates)[117];\r\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\r\n        setFromCurrency(plnCurrency);\r\n        setToCurrency(data.base);\r\n        setExchangeRate(data.rates[plnCurrency]);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fromCurrency != null && toCurrency != null) {\r\n      fetch(\r\n        `https://free.currconv.com/api/v7/convert?q=${fromCurrency}_${toCurrency}&compact=ultra&apiKey=5cebdc7d204e872a7b27`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => setExchangeRate(data[`${fromCurrency}_${toCurrency}`]))\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }, [fromCurrency, toCurrency]);\r\n\r\n  const handleFromAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(true);\r\n  };\r\n\r\n  const handleToAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Currency Converter</h1>\r\n      <CurrencyInput\r\n        currencyOptions={currencyOptions}\r\n        selectedCurrency={fromCurrency}\r\n        onChangeCurrency={(e) => setFromCurrency(e.target.value)}\r\n        onChangeAmount={handleFromAmountChange}\r\n        amount={fromAmount}\r\n      />\r\n      =\r\n      <CurrencyInput\r\n        currencyOptions={currencyOptions}\r\n        selectedCurrency={toCurrency}\r\n        onChangeCurrency={(e) => setToCurrency(e.target.value)}\r\n        onChangeAmount={handleToAmountChange}\r\n        amount={toAmount}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\nimport CurrencyConverter from './components/CurrencyConverter';\n\nconst API_ACCESS_KEY = 'dd8b9c2acf0a67c4256acdd01dfd21ad';\n// const API_ACCESS_KEY = '';\nconst BASE_CURRENCY_URL = `http://api.exchangeratesapi.io/v1/latest?access_key=${API_ACCESS_KEY}`;\n\nfunction App() {\n  return <CurrencyConverter BASE_CURRENCY_URL={BASE_CURRENCY_URL} />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}